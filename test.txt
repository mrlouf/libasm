
test:     format de fichier elf64-x86-64


Déassemblage de la section .init :

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Déassemblage de la section .plt :

0000000000001020 <putchar@plt-0x10>:
    1020:	ff 35 6a 2f 00 00    	push   0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 6c 2f 00 00    	jmp    *0x2f6c(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <putchar@plt>:
    1030:	ff 25 6a 2f 00 00    	jmp    *0x2f6a(%rip)        # 3fa0 <putchar@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 62 2f 00 00    	jmp    *0x2f62(%rip)        # 3fa8 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <puts@plt>:
    1050:	ff 25 5a 2f 00 00    	jmp    *0x2f5a(%rip)        # 3fb0 <puts@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <strlen@plt>:
    1060:	ff 25 52 2f 00 00    	jmp    *0x2f52(%rip)        # 3fb8 <strlen@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__stack_chk_fail@plt>:
    1070:	ff 25 4a 2f 00 00    	jmp    *0x2f4a(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <printf@plt>:
    1080:	ff 25 42 2f 00 00    	jmp    *0x2f42(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <strcmp@plt>:
    1090:	ff 25 3a 2f 00 00    	jmp    *0x2f3a(%rip)        # 3fd0 <strcmp@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

Déassemblage de la section .plt.got :

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	ff 25 52 2f 00 00    	jmp    *0x2f52(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10a6:	66 90                	xchg   %ax,%ax

Déassemblage de la section .text :

00000000000010b0 <_start>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	31 ed                	xor    %ebp,%ebp
    10b6:	49 89 d1             	mov    %rdx,%r9
    10b9:	5e                   	pop    %rsi
    10ba:	48 89 e2             	mov    %rsp,%rdx
    10bd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10c1:	50                   	push   %rax
    10c2:	54                   	push   %rsp
    10c3:	45 31 c0             	xor    %r8d,%r8d
    10c6:	31 c9                	xor    %ecx,%ecx
    10c8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1199 <main>
    10cf:	ff 15 03 2f 00 00    	call   *0x2f03(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10d5:	f4                   	hlt    
    10d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10dd:	00 00 00 

00000000000010e0 <deregister_tm_clones>:
    10e0:	48 8d 3d a1 30 00 00 	lea    0x30a1(%rip),%rdi        # 4188 <__TMC_END__>
    10e7:	48 8d 05 9a 30 00 00 	lea    0x309a(%rip),%rax        # 4188 <__TMC_END__>
    10ee:	48 39 f8             	cmp    %rdi,%rax
    10f1:	74 15                	je     1108 <deregister_tm_clones+0x28>
    10f3:	48 8b 05 e6 2e 00 00 	mov    0x2ee6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10fa:	48 85 c0             	test   %rax,%rax
    10fd:	74 09                	je     1108 <deregister_tm_clones+0x28>
    10ff:	ff e0                	jmp    *%rax
    1101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1108:	c3                   	ret    
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001110 <register_tm_clones>:
    1110:	48 8d 3d 71 30 00 00 	lea    0x3071(%rip),%rdi        # 4188 <__TMC_END__>
    1117:	48 8d 35 6a 30 00 00 	lea    0x306a(%rip),%rsi        # 4188 <__TMC_END__>
    111e:	48 29 fe             	sub    %rdi,%rsi
    1121:	48 89 f0             	mov    %rsi,%rax
    1124:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1128:	48 c1 f8 03          	sar    $0x3,%rax
    112c:	48 01 c6             	add    %rax,%rsi
    112f:	48 d1 fe             	sar    %rsi
    1132:	74 14                	je     1148 <register_tm_clones+0x38>
    1134:	48 8b 05 b5 2e 00 00 	mov    0x2eb5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    113b:	48 85 c0             	test   %rax,%rax
    113e:	74 08                	je     1148 <register_tm_clones+0x38>
    1140:	ff e0                	jmp    *%rax
    1142:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1148:	c3                   	ret    
    1149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001150 <__do_global_dtors_aux>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	80 3d 2d 30 00 00 00 	cmpb   $0x0,0x302d(%rip)        # 4188 <__TMC_END__>
    115b:	75 2b                	jne    1188 <__do_global_dtors_aux+0x38>
    115d:	55                   	push   %rbp
    115e:	48 83 3d 92 2e 00 00 	cmpq   $0x0,0x2e92(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1165:	00 
    1166:	48 89 e5             	mov    %rsp,%rbp
    1169:	74 0c                	je     1177 <__do_global_dtors_aux+0x27>
    116b:	48 8b 3d 96 2e 00 00 	mov    0x2e96(%rip),%rdi        # 4008 <__dso_handle>
    1172:	e8 29 ff ff ff       	call   10a0 <__cxa_finalize@plt>
    1177:	e8 64 ff ff ff       	call   10e0 <deregister_tm_clones>
    117c:	c6 05 05 30 00 00 01 	movb   $0x1,0x3005(%rip)        # 4188 <__TMC_END__>
    1183:	5d                   	pop    %rbp
    1184:	c3                   	ret    
    1185:	0f 1f 00             	nopl   (%rax)
    1188:	c3                   	ret    
    1189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001190 <frame_dummy>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	e9 77 ff ff ff       	jmp    1110 <register_tm_clones>

0000000000001199 <main>:
    1199:	f3 0f 1e fa          	endbr64 
    119d:	55                   	push   %rbp
    119e:	48 89 e5             	mov    %rsp,%rbp
    11a1:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    11a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11af:	00 00 
    11b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11b5:	31 c0                	xor    %eax,%eax
    11b7:	48 8d 05 50 0e 00 00 	lea    0xe50(%rip),%rax        # 200e <_IO_stdin_used+0xe>
    11be:	48 89 c7             	mov    %rax,%rdi
    11c1:	e8 8a fe ff ff       	call   1050 <puts@plt>
    11c6:	48 8d 05 51 0e 00 00 	lea    0xe51(%rip),%rax        # 201e <_IO_stdin_used+0x1e>
    11cd:	48 89 c7             	mov    %rax,%rdi
    11d0:	e8 3b 02 00 00       	call   1410 <ft_strlen>
    11d5:	48 89 c6             	mov    %rax,%rsi
    11d8:	48 8d 05 40 0e 00 00 	lea    0xe40(%rip),%rax        # 201f <_IO_stdin_used+0x1f>
    11df:	48 89 c7             	mov    %rax,%rdi
    11e2:	b8 00 00 00 00       	mov    $0x0,%eax
    11e7:	e8 94 fe ff ff       	call   1080 <printf@plt>
    11ec:	be 00 00 00 00       	mov    $0x0,%esi
    11f1:	48 8d 05 27 0e 00 00 	lea    0xe27(%rip),%rax        # 201f <_IO_stdin_used+0x1f>
    11f8:	48 89 c7             	mov    %rax,%rdi
    11fb:	b8 00 00 00 00       	mov    $0x0,%eax
    1200:	e8 7b fe ff ff       	call   1080 <printf@plt>
    1205:	48 8b 05 74 2f 00 00 	mov    0x2f74(%rip),%rax        # 4180 <s1>
    120c:	48 89 c7             	mov    %rax,%rdi
    120f:	e8 fc 01 00 00       	call   1410 <ft_strlen>
    1214:	48 89 c6             	mov    %rax,%rsi
    1217:	48 8d 05 01 0e 00 00 	lea    0xe01(%rip),%rax        # 201f <_IO_stdin_used+0x1f>
    121e:	48 89 c7             	mov    %rax,%rdi
    1221:	b8 00 00 00 00       	mov    $0x0,%eax
    1226:	e8 55 fe ff ff       	call   1080 <printf@plt>
    122b:	48 8b 05 4e 2f 00 00 	mov    0x2f4e(%rip),%rax        # 4180 <s1>
    1232:	48 89 c7             	mov    %rax,%rdi
    1235:	e8 26 fe ff ff       	call   1060 <strlen@plt>
    123a:	48 89 c6             	mov    %rax,%rsi
    123d:	48 8d 05 db 0d 00 00 	lea    0xddb(%rip),%rax        # 201f <_IO_stdin_used+0x1f>
    1244:	48 89 c7             	mov    %rax,%rdi
    1247:	b8 00 00 00 00       	mov    $0x0,%eax
    124c:	e8 2f fe ff ff       	call   1080 <printf@plt>
    1251:	bf 0a 00 00 00       	mov    $0xa,%edi
    1256:	e8 d5 fd ff ff       	call   1030 <putchar@plt>
    125b:	48 8d 05 c2 0d 00 00 	lea    0xdc2(%rip),%rax        # 2024 <_IO_stdin_used+0x24>
    1262:	48 89 c7             	mov    %rax,%rdi
    1265:	e8 e6 fd ff ff       	call   1050 <puts@plt>
    126a:	48 8b 05 0f 2f 00 00 	mov    0x2f0f(%rip),%rax        # 4180 <s1>
    1271:	48 89 c6             	mov    %rax,%rsi
    1274:	48 8d 05 a5 2d 00 00 	lea    0x2da5(%rip),%rax        # 4020 <s2>
    127b:	48 89 c7             	mov    %rax,%rdi
    127e:	e8 ad 01 00 00       	call   1430 <ft_strcpy>
    1283:	48 89 c7             	mov    %rax,%rdi
    1286:	e8 c5 fd ff ff       	call   1050 <puts@plt>
    128b:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 4180 <s1>
    1292:	48 89 c6             	mov    %rax,%rsi
    1295:	48 8d 05 84 2d 00 00 	lea    0x2d84(%rip),%rax        # 4020 <s2>
    129c:	48 89 c7             	mov    %rax,%rdi
    129f:	e8 9c fd ff ff       	call   1040 <strcpy@plt>
    12a4:	48 89 c7             	mov    %rax,%rdi
    12a7:	e8 a4 fd ff ff       	call   1050 <puts@plt>
    12ac:	bf 0a 00 00 00       	mov    $0xa,%edi
    12b1:	e8 7a fd ff ff       	call   1030 <putchar@plt>
    12b6:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    12bd:	48 8d 15 7c 2d 00 00 	lea    0x2d7c(%rip),%rdx        # 4040 <s2+0x20>
    12c4:	b9 28 00 00 00       	mov    $0x28,%ecx
    12c9:	48 89 c7             	mov    %rax,%rdi
    12cc:	48 89 d6             	mov    %rdx,%rsi
    12cf:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    12d2:	c7 85 a4 fe ff ff 00 	movl   $0x0,-0x15c(%rbp)
    12d9:	00 00 00 
    12dc:	e9 e7 00 00 00       	jmp    13c8 <main+0x22f>
    12e1:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    12e7:	48 98                	cltq   
    12e9:	48 c1 e0 04          	shl    $0x4,%rax
    12ed:	48 01 e8             	add    %rbp,%rax
    12f0:	48 2d 48 01 00 00    	sub    $0x148,%rax
    12f6:	48 8b 10             	mov    (%rax),%rdx
    12f9:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    12ff:	48 98                	cltq   
    1301:	48 c1 e0 04          	shl    $0x4,%rax
    1305:	48 01 e8             	add    %rbp,%rax
    1308:	48 2d 50 01 00 00    	sub    $0x150,%rax
    130e:	48 8b 00             	mov    (%rax),%rax
    1311:	48 89 d6             	mov    %rdx,%rsi
    1314:	48 89 c7             	mov    %rax,%rdi
    1317:	e8 74 fd ff ff       	call   1090 <strcmp@plt>
    131c:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
    1322:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    1328:	48 98                	cltq   
    132a:	48 c1 e0 04          	shl    $0x4,%rax
    132e:	48 01 e8             	add    %rbp,%rax
    1331:	48 2d 48 01 00 00    	sub    $0x148,%rax
    1337:	48 8b 10             	mov    (%rax),%rdx
    133a:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    1340:	48 98                	cltq   
    1342:	48 c1 e0 04          	shl    $0x4,%rax
    1346:	48 01 e8             	add    %rbp,%rax
    1349:	48 2d 50 01 00 00    	sub    $0x150,%rax
    134f:	48 8b 00             	mov    (%rax),%rax
    1352:	48 89 d6             	mov    %rdx,%rsi
    1355:	48 89 c7             	mov    %rax,%rdi
    1358:	e8 f3 00 00 00       	call   1450 <ft_strcmp>
    135d:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
    1363:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    1369:	48 98                	cltq   
    136b:	48 c1 e0 04          	shl    $0x4,%rax
    136f:	48 01 e8             	add    %rbp,%rax
    1372:	48 2d 48 01 00 00    	sub    $0x148,%rax
    1378:	48 8b 08             	mov    (%rax),%rcx
    137b:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    1381:	48 98                	cltq   
    1383:	48 c1 e0 04          	shl    $0x4,%rax
    1387:	48 01 e8             	add    %rbp,%rax
    138a:	48 2d 50 01 00 00    	sub    $0x150,%rax
    1390:	48 8b 10             	mov    (%rax),%rdx
    1393:	8b bd a8 fe ff ff    	mov    -0x158(%rbp),%edi
    1399:	8b b5 ac fe ff ff    	mov    -0x154(%rbp),%esi
    139f:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    13a5:	41 89 f9             	mov    %edi,%r9d
    13a8:	41 89 f0             	mov    %esi,%r8d
    13ab:	89 c6                	mov    %eax,%esi
    13ad:	48 8d 05 84 0c 00 00 	lea    0xc84(%rip),%rax        # 2038 <_IO_stdin_used+0x38>
    13b4:	48 89 c7             	mov    %rax,%rdi
    13b7:	b8 00 00 00 00       	mov    $0x0,%eax
    13bc:	e8 bf fc ff ff       	call   1080 <printf@plt>
    13c1:	83 85 a4 fe ff ff 01 	addl   $0x1,-0x15c(%rbp)
    13c8:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
    13ce:	48 98                	cltq   
    13d0:	48 c1 e0 04          	shl    $0x4,%rax
    13d4:	48 01 e8             	add    %rbp,%rax
    13d7:	48 2d 50 01 00 00    	sub    $0x150,%rax
    13dd:	48 8b 00             	mov    (%rax),%rax
    13e0:	48 85 c0             	test   %rax,%rax
    13e3:	0f 85 f8 fe ff ff    	jne    12e1 <main+0x148>
    13e9:	b8 00 00 00 00       	mov    $0x0,%eax
    13ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    13f2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    13f9:	00 00 
    13fb:	74 05                	je     1402 <main+0x269>
    13fd:	e8 6e fc ff ff       	call   1070 <__stack_chk_fail@plt>
    1402:	c9                   	leave  
    1403:	c3                   	ret    
    1404:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    140b:	00 00 00 
    140e:	66 90                	xchg   %ax,%ax

0000000000001410 <ft_strlen>:
    1410:	b8 00 00 00 00       	mov    $0x0,%eax
    1415:	48 85 ff             	test   %rdi,%rdi
    1418:	74 0d                	je     1427 <ft_strlen.exit>

000000000000141a <ft_strlen.loop>:
    141a:	80 3f 00             	cmpb   $0x0,(%rdi)
    141d:	74 08                	je     1427 <ft_strlen.exit>
    141f:	48 ff c0             	inc    %rax
    1422:	48 ff c7             	inc    %rdi
    1425:	eb f3                	jmp    141a <ft_strlen.loop>

0000000000001427 <ft_strlen.exit>:
    1427:	c3                   	ret    
    1428:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    142f:	00 

0000000000001430 <ft_strcpy>:
    1430:	48 89 f8             	mov    %rdi,%rax

0000000000001433 <ft_strcpy.loop>:
    1433:	8a 16                	mov    (%rsi),%dl
    1435:	88 17                	mov    %dl,(%rdi)
    1437:	48 ff c6             	inc    %rsi
    143a:	48 ff c7             	inc    %rdi
    143d:	84 d2                	test   %dl,%dl
    143f:	75 f2                	jne    1433 <ft_strcpy.loop>
    1441:	c3                   	ret    
    1442:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1449:	00 00 00 
    144c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001450 <ft_strcmp>:
    1450:	b8 00 00 00 00       	mov    $0x0,%eax

0000000000001455 <ft_strcmp.loop>:
    1455:	8a 06                	mov    (%rsi),%al
    1457:	8a 17                	mov    (%rdi),%dl
    1459:	38 d0                	cmp    %dl,%al
    145b:	75 0e                	jne    146b <ft_strcmp.diff>
    145d:	48 ff c6             	inc    %rsi
    1460:	48 ff c7             	inc    %rdi
    1463:	84 c0                	test   %al,%al
    1465:	74 0a                	je     1471 <ft_strcmp.exit>
    1467:	84 d2                	test   %dl,%dl
    1469:	eb ea                	jmp    1455 <ft_strcmp.loop>

000000000000146b <ft_strcmp.diff>:
    146b:	28 d0                	sub    %dl,%al
    146d:	0f be c0             	movsbl %al,%eax
    1470:	c3                   	ret    

0000000000001471 <ft_strcmp.exit>:
    1471:	c3                   	ret    

Déassemblage de la section .fini :

0000000000001474 <_fini>:
    1474:	f3 0f 1e fa          	endbr64 
    1478:	48 83 ec 08          	sub    $0x8,%rsp
    147c:	48 83 c4 08          	add    $0x8,%rsp
    1480:	c3                   	ret    
